{"version":3,"file":"static/js/924.0664681b.chunk.js","mappings":"8PA2BA,EAxBoB,SAAHA,GAAiC,IAA3BC,EAAmBD,EAAnBC,oBACfC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CACGJ,GACCA,EAAoBK,KAAI,SAAAC,GACtB,OACEC,EAAAA,EAAAA,KAAA,MAAAH,UACEG,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CACHC,MAAO,CAAEC,KAAMT,GACfU,GAAE,WAAAC,OAAaN,EAAGO,IAAKT,SAGtBE,EAAGQ,OAASR,EAAGS,MAFXT,EAAGO,KAJHP,EAAGO,GAUhB,KACFN,EAAAA,EAAAA,KAAA,MAAAH,SAAI,eAGV,E,SCmBA,EAvCe,WACb,IAAAY,GAA+CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApDhB,EAAmBkB,EAAA,GAAEE,EAAeF,EAAA,GAC3CG,GAA+CC,EAAAA,EAAAA,MAAiBC,GAAAJ,EAAAA,EAAAA,GAAAE,EAAA,GAAzDG,EAAYD,EAAA,GAAEE,EAAsBF,EAAA,GACrCG,EAAaF,EAAaG,IAAI,SAE9BC,EAAY,eAAA7B,GAAA8B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAK,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC9BH,EAAMI,iBACNX,EAAuB,CAAEY,MAAOL,EAAMM,cAAcC,SAASC,MAAMC,QAAS,wBAAAR,EAAAS,OAAA,GAAAX,EAAA,KAC7E,gBAHiBY,GAAA,OAAA5C,EAAA6C,MAAA,KAAAC,UAAA,KAqBlB,OAjBAC,EAAAA,EAAAA,YAAU,WACR,GAAKpB,EAAL,CACA,IAAMqB,EAAK,eAAAC,GAAAnB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAmB,IAAA,IAAAC,EAAAC,EAAA,OAAArB,IAAAA,MAAA,SAAAsB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cAAAiB,EAAAlB,KAAA,EAAAkB,EAAAjB,KAAA,GAEakB,EAAAA,EAAAA,IAAgB3B,GAAY,KAAD,GAA5CwB,EAAQE,EAAAE,OAEEJ,EAASC,UACjBA,EAAUD,EAASC,QACzB/B,EAAgB+B,IACjBC,EAAAjB,KAAA,gBAAAiB,EAAAlB,KAAA,EAAAkB,EAAAG,GAAAH,EAAA,SAEDI,QAAQC,IAAIL,EAAAG,GAAMG,SAAS,yBAAAN,EAAAV,OAAA,GAAAO,EAAA,kBAE9B,kBAXU,OAAAD,EAAAJ,MAAA,KAAAC,UAAA,KAYXE,GAbuB,CAczB,GAAG,CAACvB,EAAcE,KAGhBnB,EAAAA,EAAAA,KAAA,OAAAH,UACED,EAAAA,EAAAA,MAAA,QAAMwD,SAAU/B,EAAaxB,SAAA,EAC3BG,EAAAA,EAAAA,KAAA,SAAOQ,KAAK,QAAQ6C,aAAclC,GAAc,GAAImC,KAAK,UACzDtD,EAAAA,EAAAA,KAAA,UAAQsD,KAAK,SAAQzD,SAAC,WACrBJ,EAAoB8D,OAAS,IAC5BvD,EAAAA,EAAAA,KAACwD,EAAW,CAAC/D,oBAAqBA,QAK5C,C","sources":["components/ListOfFilms/ListOfFilms.jsx","components/Pages/Movies/Movies.jsx"],"sourcesContent":["import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst ListOfFilms = ({ listOfMoviesByQuery }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {listOfMoviesByQuery &&\n        listOfMoviesByQuery.map(el => {\n          return (\n            <li key={el.id}>\n              <Link\n                state={{ from: location }}\n                to={`/movies/${el.id}`}\n                key={el.id}\n              >\n                {el.title || el.name}\n              </Link>\n            </li>\n          );\n        })}\n      <h1>hi there</h1>\n    </ul>\n  );\n};\n\nexport default ListOfFilms;\n","import ListOfFilms from 'components/ListOfFilms/ListOfFilms';\nimport React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByQuery } from 'services/api';\n\nconst Movies = () => {\n  const [listOfMoviesByQuery, setListOfMovies] = useState([]);\n  const [searchParams, setSearchParamsByQuery] = useSearchParams();\n  const queryValue = searchParams.get('query');\n\n  const onFormSubmit = async event => {\n    event.preventDefault();\n    setSearchParamsByQuery({ query: event.currentTarget.elements.input.value });\n  };\n  useEffect(() => {\n    if (!queryValue) return;\n    const fetch = async () => {\n      try {\n        const response = await getMovieByQuery(queryValue);\n\n        if (response && response.results) {\n          const results = response.results;\n          setListOfMovies(results);\n        }\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetch();\n  }, [searchParams, queryValue]);\n\n  return (\n    <div>\n      <form onSubmit={onFormSubmit}>\n        <input name=\"input\" defaultValue={queryValue || ''} type=\"text\" />\n        <button type=\"submit\">Search</button>\n        {listOfMoviesByQuery.length > 0 && (\n          <ListOfFilms listOfMoviesByQuery={listOfMoviesByQuery}></ListOfFilms>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["_ref","listOfMoviesByQuery","location","useLocation","_jsxs","children","map","el","_jsx","Link","state","from","to","concat","id","title","name","_useState","useState","_useState2","_slicedToArray","setListOfMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParamsByQuery","queryValue","get","onFormSubmit","_asyncToGenerator","_regeneratorRuntime","_callee","event","_context","prev","next","preventDefault","query","currentTarget","elements","input","value","stop","_x","apply","arguments","useEffect","fetch","_ref2","_callee2","response","results","_context2","getMovieByQuery","sent","t0","console","log","message","onSubmit","defaultValue","type","length","ListOfFilms"],"sourceRoot":""}